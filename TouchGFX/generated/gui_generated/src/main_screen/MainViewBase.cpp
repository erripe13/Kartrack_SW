/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SANS_TITRE_1_ID));
    add(image1);

    buttonWithIcon1.setXY(336, 212);
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_INACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_00BFFF_SVG_ID));
    buttonWithIcon1.setIconXY(47, 5);
    buttonWithIcon1.setVisible(false);
    add(buttonWithIcon1);

    image2.setXY(0, 15);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_TITLE_ID));
    add(image2);

    textArea1.setXY(188, 247);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8UZD));
    add(textArea1);

    VALIDE.setXY(0, 174);
    VALIDE.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_30_30_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_30_30_E8F6FB_SVG_ID));
    VALIDE.setIconXY(36, 2);
    VALIDE.setAction(buttonCallback);
    add(VALIDE);

    DOWN.setXY(0, 113);
    DOWN.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    DOWN.setIconXY(25, -7);
    DOWN.setAction(buttonCallback);
    add(DOWN);

    UP.setXY(0, 62);
    UP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    UP.setIconXY(25, -7);
    UP.setAction(buttonCallback);
    add(UP);

    buttonWithIcon1_1.setXY(420, 237);
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_SKIP_NEXT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    buttonWithIcon1_1.setIconXY(97, 0);
    buttonWithIcon1_1.setVisible(false);
    add(buttonWithIcon1_1);

    Data_Live.setXY(176, 180);
    Data_Live.setBitmap(touchgfx::Bitmap(BITMAP_DATA_LIVE_ID));
    add(Data_Live);

    Selector.setXY(164, 141);
    Selector.setBitmap(touchgfx::Bitmap(BITMAP_RECTANGLE_1_ID));
    add(Selector);

    Session_Start.setXY(183, 151);
    Session_Start.setBitmap(touchgfx::Bitmap(BITMAP_SESSION_START_ID));
    add(Session_Start);
}

MainViewBase::~MainViewBase()
{

}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &DOWN)
    {
        //DOWNClicked
        //When DOWN clicked call virtual function
        //Call DOWNClicked
        DOWNClicked();
    }
    if (&src == &UP)
    {
        //UPClicked
        //When UP clicked call virtual function
        //Call UPClicked
        UPClicked();
    }
    if (&src == &VALIDE)
    {
        //VALIDEClicked
        //When VALIDE clicked call virtual function
        //Call VALIDEClicked
        VALIDEClicked();
    }
}

void MainViewBase::gotoSession_StartScreenNoTransition()
{
    //Interaction1
    //When gotoSession_StartScreenNoTransition is called change screen to Session_Start
    //Go to Session_Start with no screen transition
    application().gotoSession_StartScreenNoTransition();
}

void MainViewBase::gotoData_LiveScreenNoTransition()
{
    //Interaction2
    //When gotoData_LiveScreenNoTransition is called change screen to Data_Live
    //Go to Data_Live with no screen transition
    application().gotoData_LiveScreenNoTransition();
}
